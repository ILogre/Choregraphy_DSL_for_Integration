/*
 * generated by Xtext 2.12.0
 */
package com.chor4integration.textdsl.formatting2

import com.chor4integration.chor4int.Choreography
import com.chor4integration.chor4int.FlowElement
import com.chor4integration.servicesmetamodel.Operation
import com.chor4integration.servicesmetamodel.Service
import com.chor4integration.textdsl.services.Chor4IntTxtDslGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class Chor4IntTxtDslFormatter extends AbstractFormatter2 {
	
	@Inject extension Chor4IntTxtDslGrammarAccess

	def dispatch void format(Choreography choreography, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (FlowElement flowElement : choreography.getFlowElements()) {
			flowElement.format;
		}
	}

	def dispatch void format(Service service, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Operation operation : service.getOperations()) {
			operation.format;
		}
	}
	
	// TODO: implement for 
}
